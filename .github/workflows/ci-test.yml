name: CI Test (Limited)

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  basic-test:
    name: Basic CI Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
      continue-on-error: true
    
    - name: Basic compile check
      run: cargo check
      continue-on-error: true
    
    - name: Run clippy (allow warnings)
      run: cargo clippy --all-targets --all-features
      continue-on-error: true
    
    - name: Build project
      run: cargo build --verbose
      continue-on-error: true
    
    - name: Run tests (basic)
      run: timeout 300 cargo test --verbose || echo "Tests completed with timeout"
      continue-on-error: true
    
    - name: Generate CI/CD report
      run: |
        echo "## CI/CD Pipeline Test Report" >> $GITHUB_STEP_SUMMARY
        echo "### Basic Checks" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Checkout successful" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Rust toolchain installed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Dependencies cached" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ”„ All steps attempted (some may have warnings)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "1. Fix clippy warnings for production CI" >> $GITHUB_STEP_SUMMARY
        echo "2. Optimize test execution time" >> $GITHUB_STEP_SUMMARY
        echo "3. Enable full CI/CD pipeline" >> $GITHUB_STEP_SUMMARY